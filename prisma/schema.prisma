// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Ideally, we want to separate usage collection from the metadata, however Prisma does not support
// multiple databases properly. https://github.com/prisma/prisma/issues/2443 solution does not
// generate the proper client.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now()) @map("created_at")
  model     Json      @default("{}")
  ctx       Json      @default("{}")
  messages  Message[]

  @@index([createdAt], map: "chat_created_at_idx")
  @@map("chat")
}

model Message {
  id        String   @id @default(uuid())
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String   @map("chat_id")
  createdAt DateTime @default(now()) @map("created_at")
  endUser   String   @default("") @map("end_user")
  role      String   @default("")
  content   String   @default("")
  upvote    Boolean  @default(false)
  downvote  Boolean  @default(false)

  @@index([chatId], map: "message_chat_id_idx")
  @@index([createdAt], map: "message_created_at_idx")
  @@map("message")
}

model Principal {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @default(now()) @updatedAt @map("updated_at")
  type          PrincipalType   @default(END_USER)
  status        PrincipalStatus @default(ACTIVE)
  resourceId    String          @unique @default("") @map("resource_id")
  name          String          @default("")
  email         String          @unique @default("")
  emailVerified Boolean         @default(false) @map("email_verified")
  passwordHash  String          @default("") @map("password_hash")

  @@index([name], map: "principal_name_idx")
  @@map("principal")
}

enum PrincipalType {
  END_USER
  BOT
}

enum PrincipalStatus {
  ACTIVE
  BLOCKED
}
